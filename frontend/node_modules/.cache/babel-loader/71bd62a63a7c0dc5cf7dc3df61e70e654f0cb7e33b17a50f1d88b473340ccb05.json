{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const fetchPopulation = createAsyncThunk('fetchPopulation', async () => {\n  const response = await fetch('http://127.0.0.1:8000/population');\n  return response.json();\n});\nconst populationSlice = createSlice({\n  name: 'population',\n  initialState: {\n    isLoading: false,\n    data: null,\n    isError: false\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPopulation.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchPopulation.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.data = action.payload;\n    });\n    builder.addCase(fetchPopulation.rejected, (state, action) => {\n      console.log('!!!ERROR!!!', action.payload);\n      state.isError = true;\n    });\n  }\n});\nexport default populationSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchPopulation","response","fetch","json","populationSlice","name","initialState","isLoading","data","isError","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","console","log","reducer"],"sources":["D:/Work/DJANGO POPULATION FUNNEL CHART TEST/Final/frontend/src/redux/slice/population.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchPopulation = createAsyncThunk('fetchPopulation', async()=>{\r\n    const response = await fetch('http://127.0.0.1:8000/population')\r\n    return response.json()\r\n})\r\n\r\nconst populationSlice = createSlice({\r\n    name: 'population',\r\n    initialState:{\r\n        isLoading: false,\r\n        data: null,\r\n        isError: false,\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchPopulation.pending, (state, action)=>{\r\n            state.isLoading = true;\r\n        })\r\n        builder.addCase(fetchPopulation.fulfilled, (state, action)=>{\r\n            state.isLoading = false;\r\n            state.data = action.payload;\r\n        })\r\n        builder.addCase(fetchPopulation.rejected, (state, action)=>{\r\n            console.log('!!!ERROR!!!',action.payload);\r\n            state.isError = true;\r\n        })\r\n    }\r\n});\r\n\r\nexport default populationSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,gBAAgB,QAAO,kBAAkB;AAE9D,OAAO,MAAMC,eAAe,GAAGD,gBAAgB,CAAC,iBAAiB,EAAE,YAAS;EACxE,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;EAChE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC1B,CAAC,CAAC;AAEF,MAAMC,eAAe,GAAGN,WAAW,CAAC;EAChCO,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAC;IACTC,SAAS,EAAE,KAAK;IAChBC,IAAI,EAAE,IAAI;IACVC,OAAO,EAAE;EACb,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACZ,eAAe,CAACa,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAG;MACtDD,KAAK,CAACP,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACZ,eAAe,CAACgB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAG;MACxDD,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACE,OAAO;IAC/B,CAAC,CAAC;IACFN,OAAO,CAACC,OAAO,CAACZ,eAAe,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAG;MACvDI,OAAO,CAACC,GAAG,CAAC,aAAa,EAACL,MAAM,CAACE,OAAO,CAAC;MACzCH,KAAK,CAACL,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeL,eAAe,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}