{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\DJANGO POPULATION FUNNEL CHART TEST\\\\Final\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { fetchPopulationData } from './api/populationData';\n// import './App.css';\n\n// function App() {\n\n//   const [population, setPopulationData] = useState([]);\n//   const [currentYearIndex, setCurrentYearIndex] = useState(0);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const data = await fetchPopulationData();\n//         setPopulationData(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const handlePrevYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n//   };\n\n//   const handleNextYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, population.length - 1));\n//   };\n\n//   const currentYearData = population[currentYearIndex];\n\n//   return (\n//     <div>\n//     <h1>Population Data</h1>\n//     <h2>Year: {currentYearData.year}</h2>\n//       <h2>Population: {currentYearData.population_65plus}</h2>\n//       <h2>Population: {currentYearData.population_25to64}</h2>\n//       <h2>Population: {currentYearData.population_15to24}</h2>\n//       <h2>Population: {currentYearData.population_5to14}</h2>\n//       <h2>Population: {currentYearData.population_0to4}</h2>\n\n//       <button onClick={handlePrevYear}>Previous Year</button>\n//       <button onClick={handleNextYear}>Next Year</button>\n//     {/* <ul>\n//       {population.map((p, index) => (\n//         <li key={index}>\n//           <p>{p.population_65plus}</p>\n//           <p>{p.population_25to64}</p>\n//           <p>{p.population_15to24}</p>\n//           <p>{p.population_5to14}</p>\n//           <p>{p.population_0to4}</p>\n//         </li>\n//       ))}\n//     </ul> */}\n\n//   </div>\n//   );\n// }\n\n// export default App;\n\n// #############################################################\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchPopulationData } from './api/populationData';\n// import Graph from './Components/Graph'\n\n// import './App.css';\n\n// function App() {\n//   const [populationData, setPopulationData] = useState([]);\n//   const [currentYearIndex, setCurrentYearIndex] = useState(0);\n//   const [dataLoaded, setDataLoaded] = useState(false); // Add state to track data loading\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const data = await fetchPopulationData();\n//         setPopulationData(data);\n//         setDataLoaded(true); // Set dataLoaded to true once data is fetched\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const handlePrevYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n//   };\n\n//   const handleNextYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, populationData.length - 1));\n//   };\n\n//   const currentYearData = populationData[currentYearIndex];\n//   // console.log(population[0].id)\n//   return (\n//     <div>\n//       <h1>Population Data</h1>\n//       {dataLoaded && ( // Render buttons only when data is loaded\n//         <>\n//           <h2>Year: {currentYearData.year}</h2>\n//           <h2>Population: {currentYearData.population_65plus}</h2>\n//           <h2>Population: {currentYearData.population_25to64}</h2>\n//           <h2>Population: {currentYearData.population_15to24}</h2>\n//           <h2>Population: {currentYearData.population_5to14}</h2>\n//           <h2>Population: {currentYearData.population_0to4}</h2>\n\n//           <button onClick={handlePrevYear}>Previous Year</button>\n//           <button onClick={handleNextYear}>Next Year</button>\n//           <Graph\n//         currentYearData={currentYearData}\n//        />\n//         </>\n//       )}\n\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// ######################################################################\n\n// import React, {useEffect, useState} from 'react';\n// import { useDispatch, useSelector } from 'react-redux'; // Ensure react-redux is imported\n\n// import {fetchPopulation} from './redux/slice/population'\n// import './App.css';\n// import Graph from './Components/Graph'\n\n// function App() {\n\n//   const dispatch = useDispatch();\n//   const state = useSelector((state=>state))\n//   const [currentYearIndex, setCurrentYearIndex] = useState(0);\n\n//   useEffect(() => {\n//     // Dispatch the action to fetch population data when the component mounts\n//     dispatch(fetchPopulation());\n//   }, [dispatch]); \n\n//   const handlePrevYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n//   };\n\n//   const handleNextYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, state.population.data.length - 1));\n//   };\n\n//   console.log(state)\n//   return (\n//     <div>\n//       <h1>Population Data</h1>\n//       {/* <button onClick={e=>dispatch(fetchPopulation())}>Fetch Population</button> */}\n//       {/* {state.population.data && state.population.data.map((e)=><li>{e.id}</li>) } */}\n//       {state.population.data && (\n//           <div>\n//             <h2>Year: {state.population.data[currentYearIndex].year}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_65plus}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_25to64}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_15to24}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_5to14}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_0to4}</h2>        \n//             <button onClick={handlePrevYear}>Previous Year</button>\n//             <button onClick={handleNextYear}>Next Year</button>\n//             <Graph\n//               currentYearData={state.population.data[currentYearIndex]}\n//             />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// ####################################\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPopulation } from './redux/slice/population';\nimport Graph from './Components/Graph';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data: populationData\n  } = useSelector(state => state.population);\n  const [currentYearIndex, setCurrentYearIndex] = useState(0);\n  useEffect(() => {\n    dispatch(fetchPopulation());\n  }, [dispatch]);\n  const handlePrevYear = () => {\n    setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const handleNextYear = () => {\n    setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, populationData.length - 1));\n  };\n\n  // Check if populationData is null before accessing its elements\n  const currentYearData = populationData ? populationData[currentYearIndex] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Population Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), populationData && currentYearData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Year: \", currentYearData.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Population 65+: \", currentYearData.population_65plus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Population 25-64: \", currentYearData.population_25to64]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Population 15-24: \", currentYearData.population_15to24]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Population 5-14: \", currentYearData.population_5to14]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Population 0-4: \", currentYearData.population_0to4]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevYear,\n        children: \"Previous Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextYear,\n        children: \"Next Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        currentYearData: currentYearData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hK+6y7hMqpPgCwdpX8OV3cb+HZM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPopulation","Graph","jsxDEV","_jsxDEV","App","_s","dispatch","data","populationData","state","population","currentYearIndex","setCurrentYearIndex","handlePrevYear","prevIndex","Math","max","handleNextYear","min","length","currentYearData","children","fileName","_jsxFileName","lineNumber","columnNumber","year","population_65plus","population_25to64","population_15to24","population_5to14","population_0to4","onClick","_c","$RefreshReg$"],"sources":["D:/Work/DJANGO POPULATION FUNNEL CHART TEST/Final/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { fetchPopulationData } from './api/populationData';\n// import './App.css';\n\n// function App() {\n\n//   const [population, setPopulationData] = useState([]);\n//   const [currentYearIndex, setCurrentYearIndex] = useState(0);\n\n\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const data = await fetchPopulationData();\n//         setPopulationData(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const handlePrevYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n//   };\n\n//   const handleNextYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, population.length - 1));\n//   };\n\n//   const currentYearData = population[currentYearIndex];\n\n//   return (\n//     <div>\n//     <h1>Population Data</h1>\n//     <h2>Year: {currentYearData.year}</h2>\n//       <h2>Population: {currentYearData.population_65plus}</h2>\n//       <h2>Population: {currentYearData.population_25to64}</h2>\n//       <h2>Population: {currentYearData.population_15to24}</h2>\n//       <h2>Population: {currentYearData.population_5to14}</h2>\n//       <h2>Population: {currentYearData.population_0to4}</h2>\n\n\n\n//       <button onClick={handlePrevYear}>Previous Year</button>\n//       <button onClick={handleNextYear}>Next Year</button>\n//     {/* <ul>\n//       {population.map((p, index) => (\n//         <li key={index}>\n//           <p>{p.population_65plus}</p>\n//           <p>{p.population_25to64}</p>\n//           <p>{p.population_15to24}</p>\n//           <p>{p.population_5to14}</p>\n//           <p>{p.population_0to4}</p>\n//         </li>\n//       ))}\n//     </ul> */}\n\n//   </div>\n//   );\n// }\n\n// export default App;\n\n// #############################################################\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchPopulationData } from './api/populationData';\n// import Graph from './Components/Graph'\n\n// import './App.css';\n\n// function App() {\n//   const [populationData, setPopulationData] = useState([]);\n//   const [currentYearIndex, setCurrentYearIndex] = useState(0);\n//   const [dataLoaded, setDataLoaded] = useState(false); // Add state to track data loading\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const data = await fetchPopulationData();\n//         setPopulationData(data);\n//         setDataLoaded(true); // Set dataLoaded to true once data is fetched\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n//     fetchData();\n//   }, []);\n\n//   const handlePrevYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n//   };\n\n//   const handleNextYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, populationData.length - 1));\n//   };\n\n//   const currentYearData = populationData[currentYearIndex];\n//   // console.log(population[0].id)\n//   return (\n//     <div>\n//       <h1>Population Data</h1>\n//       {dataLoaded && ( // Render buttons only when data is loaded\n//         <>\n//           <h2>Year: {currentYearData.year}</h2>\n//           <h2>Population: {currentYearData.population_65plus}</h2>\n//           <h2>Population: {currentYearData.population_25to64}</h2>\n//           <h2>Population: {currentYearData.population_15to24}</h2>\n//           <h2>Population: {currentYearData.population_5to14}</h2>\n//           <h2>Population: {currentYearData.population_0to4}</h2>\n\n//           <button onClick={handlePrevYear}>Previous Year</button>\n//           <button onClick={handleNextYear}>Next Year</button>\n//           <Graph\n//         currentYearData={currentYearData}\n//        />\n//         </>\n//       )}\n\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// ######################################################################\n\n\n\n\n// import React, {useEffect, useState} from 'react';\n// import { useDispatch, useSelector } from 'react-redux'; // Ensure react-redux is imported\n\n// import {fetchPopulation} from './redux/slice/population'\n// import './App.css';\n// import Graph from './Components/Graph'\n\n// function App() {\n  \n\n//   const dispatch = useDispatch();\n//   const state = useSelector((state=>state))\n//   const [currentYearIndex, setCurrentYearIndex] = useState(0);\n\n//   useEffect(() => {\n//     // Dispatch the action to fetch population data when the component mounts\n//     dispatch(fetchPopulation());\n//   }, [dispatch]); \n\n//   const handlePrevYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n//   };\n\n//   const handleNextYear = () => {\n//     setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, state.population.data.length - 1));\n//   };\n\n//   console.log(state)\n//   return (\n//     <div>\n//       <h1>Population Data</h1>\n//       {/* <button onClick={e=>dispatch(fetchPopulation())}>Fetch Population</button> */}\n//       {/* {state.population.data && state.population.data.map((e)=><li>{e.id}</li>) } */}\n//       {state.population.data && (\n//           <div>\n//             <h2>Year: {state.population.data[currentYearIndex].year}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_65plus}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_25to64}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_15to24}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_5to14}</h2>\n//             <h2>Population: {state.population.data[currentYearIndex].population_0to4}</h2>        \n//             <button onClick={handlePrevYear}>Previous Year</button>\n//             <button onClick={handleNextYear}>Next Year</button>\n//             <Graph\n//               currentYearData={state.population.data[currentYearIndex]}\n//             />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// ####################################\n\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPopulation } from './redux/slice/population';\nimport Graph from './Components/Graph';\n\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { data: populationData } = useSelector(state => state.population);\n  const [currentYearIndex, setCurrentYearIndex] = useState(0);\n\n  useEffect(() => {\n    dispatch(fetchPopulation());\n  }, [dispatch]);\n\n  const handlePrevYear = () => {\n    setCurrentYearIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n\n  const handleNextYear = () => {\n    setCurrentYearIndex(prevIndex => Math.min(prevIndex + 1, populationData.length - 1));\n  };\n\n  // Check if populationData is null before accessing its elements\n  const currentYearData = populationData ? populationData[currentYearIndex] : null;\n\n  return (\n    <div>\n      <h1>Population Data</h1>\n      {populationData && currentYearData && (\n        <div>\n          <h2>Year: {currentYearData.year}</h2>\n          <h2>Population 65+: {currentYearData.population_65plus}</h2>\n          <h2>Population 25-64: {currentYearData.population_25to64}</h2>\n          <h2>Population 15-24: {currentYearData.population_15to24}</h2>\n          <h2>Population 5-14: {currentYearData.population_5to14}</h2>\n          <h2>Population 0-4: {currentYearData.population_0to4}</h2>\n\n          <button onClick={handlePrevYear}>Previous Year</button>\n          <button onClick={handleNextYear}>Next Year</button>\n\n          <Graph currentYearData={currentYearData} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,IAAI,EAAEC;EAAe,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;EACvE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACN,eAAe,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEd,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3BD,mBAAmB,CAACE,SAAS,IAAIC,IAAI,CAACC,GAAG,CAACF,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BL,mBAAmB,CAACE,SAAS,IAAIC,IAAI,CAACG,GAAG,CAACJ,SAAS,GAAG,CAAC,EAAEN,cAAc,CAACW,MAAM,GAAG,CAAC,CAAC,CAAC;EACtF,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGZ,cAAc,GAAGA,cAAc,CAACG,gBAAgB,CAAC,GAAG,IAAI;EAEhF,oBACER,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBjB,cAAc,IAAIY,eAAe,iBAChCjB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,GAAI,QAAM,EAACD,eAAe,CAACM,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCtB,OAAA;QAAAkB,QAAA,GAAI,kBAAgB,EAACD,eAAe,CAACO,iBAAiB;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5DtB,OAAA;QAAAkB,QAAA,GAAI,oBAAkB,EAACD,eAAe,CAACQ,iBAAiB;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DtB,OAAA;QAAAkB,QAAA,GAAI,oBAAkB,EAACD,eAAe,CAACS,iBAAiB;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DtB,OAAA;QAAAkB,QAAA,GAAI,mBAAiB,EAACD,eAAe,CAACU,gBAAgB;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5DtB,OAAA;QAAAkB,QAAA,GAAI,kBAAgB,EAACD,eAAe,CAACW,eAAe;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAE1DtB,OAAA;QAAQ6B,OAAO,EAAEnB,cAAe;QAAAQ,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvDtB,OAAA;QAAQ6B,OAAO,EAAEf,cAAe;QAAAI,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEnDtB,OAAA,CAACF,KAAK;QAACmB,eAAe,EAAEA;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAxCQD,GAAG;EAAA,QACON,WAAW,EACKC,WAAW;AAAA;AAAAkC,EAAA,GAFrC7B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}