{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\DJANGO POPULATION FUNNEL CHART TEST\\\\Final\\\\frontend\\\\src\\\\Components\\\\Graph.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-apexcharts\";\nimport populationChartConfig from '../charts/populationChartConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [],\n      options: populationChartConfig\n    };\n  }\n  componentDidUpdate(prevProps) {\n    // Check if the currentYearData prop has changed\n    if (prevProps.currentYearData !== this.props.currentYearData) {\n      // Update the series data based on the new currentYearData\n      const series = [{\n        name: \"Funnel Series\",\n        data: [{\n          x: \"65+\",\n          y: this.props.currentYearData.population_65plus\n        }, {\n          x: \"25-64\",\n          y: this.props.currentYearData.population_25to64\n        }, {\n          x: \"15-24\",\n          y: this.props.currentYearData.population_15to24\n        }, {\n          x: \"5-14\",\n          y: this.props.currentYearData.population_5to14\n        }, {\n          x: \"0-4\",\n          y: this.props.currentYearData.population_0to4\n        }]\n      }];\n\n      // Set the updated series in the state\n      this.setState({\n        series\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mixed-chart\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: this.state.options,\n            series: this.state.series,\n            type: \"bar\",\n            width: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Graph;","map":{"version":3,"names":["React","Component","Chart","populationChartConfig","jsxDEV","_jsxDEV","Graph","constructor","props","state","series","options","componentDidUpdate","prevProps","currentYearData","name","data","x","y","population_65plus","population_25to64","population_15to24","population_5to14","population_0to4","setState","render","className","children","type","width","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Work/DJANGO POPULATION FUNNEL CHART TEST/Final/frontend/src/Components/Graph.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport populationChartConfig from '../charts/populationChartConfig'\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [],\r\n      options:populationChartConfig\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Check if the currentYearData prop has changed\r\n    if (prevProps.currentYearData !== this.props.currentYearData) {\r\n      // Update the series data based on the new currentYearData\r\n      const series = [\r\n        {\r\n          name: \"Funnel Series\",\r\n          data: [\r\n            { x: \"65+\", y: this.props.currentYearData.population_65plus },\r\n            { x: \"25-64\", y: this.props.currentYearData.population_25to64 },\r\n            { x: \"15-24\", y: this.props.currentYearData.population_15to24 },\r\n            { x: \"5-14\", y: this.props.currentYearData.population_5to14 },\r\n            { x: \"0-4\", y: this.props.currentYearData.population_0to4 },\r\n          ],\r\n        },\r\n      ];\r\n\r\n      // Set the updated series in the state\r\n      this.setState({ series });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,qBAAqB,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,KAAK,SAASL,SAAS,CAAC;EAC5BM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,MAAM,EAAE,EAAE;MACVC,OAAO,EAACR;IACV,CAAC;EACH;EAEAS,kBAAkBA,CAACC,SAAS,EAAE;IAC5B;IACA,IAAIA,SAAS,CAACC,eAAe,KAAK,IAAI,CAACN,KAAK,CAACM,eAAe,EAAE;MAC5D;MACA,MAAMJ,MAAM,GAAG,CACb;QACEK,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,CACJ;UAAEC,CAAC,EAAE,KAAK;UAAEC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACM,eAAe,CAACK;QAAkB,CAAC,EAC7D;UAAEF,CAAC,EAAE,OAAO;UAAEC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACM,eAAe,CAACM;QAAkB,CAAC,EAC/D;UAAEH,CAAC,EAAE,OAAO;UAAEC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACM,eAAe,CAACO;QAAkB,CAAC,EAC/D;UAAEJ,CAAC,EAAE,MAAM;UAAEC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACM,eAAe,CAACQ;QAAiB,CAAC,EAC7D;UAAEL,CAAC,EAAE,KAAK;UAAEC,CAAC,EAAE,IAAI,CAACV,KAAK,CAACM,eAAe,CAACS;QAAgB,CAAC;MAE/D,CAAC,CACF;;MAED;MACA,IAAI,CAACC,QAAQ,CAAC;QAAEd;MAAO,CAAC,CAAC;IAC3B;EACF;EAEAe,MAAMA,CAAA,EAAG;IACP,oBACEpB,OAAA;MAAKqB,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBtB,OAAA;QAAKqB,SAAS,EAAC,KAAK;QAAAC,QAAA,eAClBtB,OAAA;UAAKqB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BtB,OAAA,CAACH,KAAK;YACJS,OAAO,EAAE,IAAI,CAACF,KAAK,CAACE,OAAQ;YAC5BD,MAAM,EAAE,IAAI,CAACD,KAAK,CAACC,MAAO;YAC1BkB,IAAI,EAAC,KAAK;YACVC,KAAK,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAe3B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}