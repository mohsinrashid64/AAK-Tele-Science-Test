{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\DJANGO POPULATION FUNNEL CHART TEST\\\\Final\\\\frontend\\\\src\\\\Components\\\\Graph.js\";\nimport React, { Component } from 'react';\nimport Chart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [],\n      options: {\n        chart: {\n          // background: ' #e6ffef',\n          type: 'bar',\n          height: 350,\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 100\n          }\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 0,\n            horizontal: true,\n            barHeight: '80%',\n            isFunnel: true\n          }\n        },\n        dataLabels: {\n          style: {\n            fontSize: '14px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fontWeight: 'bold'\n            // colors: undefined\n          },\n          enabled: true,\n          formatter: function (val, opt) {\n            return opt.w.globals.labels[opt.dataPointIndex] + ':  ' + val;\n          },\n          dropShadow: {\n            enabled: true\n          }\n        },\n        title: {\n          text: 'Pakistans Population Data',\n          align: 'middle'\n        },\n        xaxis: {\n          categories: ['65+', '25-64', '15-24', '5-14', '0-4']\n        },\n        legend: {\n          show: false\n        }\n      }\n    };\n  }\n  componentDidUpdate(prevProps) {\n    // Check if the currentYearData prop has changed\n    if (prevProps.currentYearData !== this.props.currentYearData) {\n      // Update the series data based on the new currentYearData\n      const series = [{\n        name: \"Funnel Series\",\n        data: [{\n          x: \"65+\",\n          y: this.props.currentYearData.population_65plus\n        }, {\n          x: \"25-64\",\n          y: this.props.currentYearData.population_25to64\n        }, {\n          x: \"15-24\",\n          y: this.props.currentYearData.population_15to24\n        }, {\n          x: \"5-14\",\n          y: this.props.currentYearData.population_5to14\n        }, {\n          x: \"0-4\",\n          y: this.props.currentYearData.population_0to4\n        }]\n      }];\n\n      // Set the updated series in the state\n      this.setState({\n        series\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mixed-chart\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: this.state.options,\n            series: this.state.series,\n            type: \"bar\",\n            width: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Graph;\n\n// #################################################3","map":{"version":3,"names":["React","Component","Chart","jsxDEV","_jsxDEV","Graph","constructor","props","state","series","options","chart","type","height","animations","enabled","easing","speed","plotOptions","bar","borderRadius","horizontal","barHeight","isFunnel","dataLabels","style","fontSize","fontFamily","fontWeight","formatter","val","opt","w","globals","labels","dataPointIndex","dropShadow","title","text","align","xaxis","categories","legend","show","componentDidUpdate","prevProps","currentYearData","name","data","x","y","population_65plus","population_25to64","population_15to24","population_5to14","population_0to4","setState","render","className","children","width","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Work/DJANGO POPULATION FUNNEL CHART TEST/Final/frontend/src/Components/Graph.js"],"sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass Graph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [],\r\n      options: {\r\n\r\n        chart: {\r\n          // background: ' #e6ffef',\r\n          type: 'bar',\r\n          height: 350,\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'easeinout',\r\n            speed: 100,\r\n        }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            borderRadius: 0,\r\n            horizontal: true,\r\n            barHeight: '80%',\r\n            isFunnel: true,\r\n          },\r\n        },\r\n        dataLabels: {\r\n          style: {\r\n            fontSize: '14px',\r\n            fontFamily: 'Helvetica, Arial, sans-serif',\r\n            fontWeight: 'bold',\r\n            // colors: undefined\r\n          },\r\n          enabled: true,\r\n          formatter: function (val, opt) {\r\n            return opt.w.globals.labels[opt.dataPointIndex] + ':  ' + val\r\n          },\r\n          dropShadow: {\r\n            enabled: true,\r\n          },\r\n        },\r\n        title: {\r\n          text: 'Pakistans Population Data',\r\n          align: 'middle',\r\n        },\r\n        xaxis: {\r\n          categories: [\r\n            '65+',\r\n            '25-64',\r\n            '15-24',\r\n            '5-14',\r\n            '0-4',\r\n          ],\r\n        },\r\n        legend: {\r\n          show: false,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Check if the currentYearData prop has changed\r\n    if (prevProps.currentYearData !== this.props.currentYearData) {\r\n      // Update the series data based on the new currentYearData\r\n      const series = [\r\n        {\r\n          name: \"Funnel Series\",\r\n          data: [\r\n            { x: \"65+\", y: this.props.currentYearData.population_65plus },\r\n            { x: \"25-64\", y: this.props.currentYearData.population_25to64 },\r\n            { x: \"15-24\", y: this.props.currentYearData.population_15to24 },\r\n            { x: \"5-14\", y: this.props.currentYearData.population_5to14 },\r\n            { x: \"0-4\", y: this.props.currentYearData.population_0to4 },\r\n          ],\r\n        },\r\n      ];\r\n\r\n      // Set the updated series in the state\r\n      this.setState({ series });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"500\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n\r\n\r\n// #################################################3\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}